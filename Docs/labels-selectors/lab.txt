Labels and Selectors
==============


kind: Pod
apiVersion: v1
metadata:
  name: labeltestpod
  labels:                                                   
    env: development
    class: pods
	depart: test
spec:
    containers:
       - name: c00
         image: ubuntu
         command: ["/bin/bash", "-c", "while true; do echo Learning Labels & Selector; sleep 4 ; done"]

kubectl apply -f <pod.yml>
kubectl get pods --show-labels

kubectl label pods labeltestpod Company=Techstart
kubectl get pods --show-labels

Now, list pods matching a label
kubectl get pods -l env=development
kubectl get pods -l env!=development
kubectl delete pod -l env!=development
kubectl get pods


Equality Based: ( =, !=)

Set Based: ( in, notin and exists)

env in (production, dev)
env notin ( class1, class2)

kubectl get pods -l 'env in (dev, testing)'
kubectl get pods -l 'env notin (dev, testing)'
kubectl get pods -l class=pods, Company=Techstart



EXAMPLE OF LABELS


kind: Pod
apiVersion: v1
metadata:
  name: 
  labels:                                                   
    env: 
    class: pods
spec:
    containers:
       - name: c00
         image: ubuntu
         command: ["/bin/bash", "-c", "while true; do echo Learning Labels & Selectors; sleep 5 ; done"]



***************************************************************************
NODE SELECTOR EXAMPLE

kind: Pod
apiVersion: v1
metadata:
  name: nodelabels
  labels:
    env: development
spec:
    containers:
       - name: c00
         image: ubuntu
         command: ["/bin/bash", "-c", "while true; do echo Learning Node Selector; sleep 5 ; done"]
    nodeSelector:                                         
       hardware: t2-medium
*****************************************************************************************************