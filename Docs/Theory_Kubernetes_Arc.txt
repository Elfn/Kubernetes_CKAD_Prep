Working with kubernetes
=======================

=> We create manifest (YAML or JSON).
=> Apply this to cluster (to master) to bring into desired state.
=> POD runs on node, which is controlled by master.

Roles of Master Node
====================
=> Kubernetes cluster containers containers running on Bare Metal( on-premises)/
VM Instances/ Cloud Instances/ all mix.
=> Kubernetes designates one or more of these as master and all others as workers.
=> The master is now going to run set of k8s processes. These processes will
ensure smooth functioning of cluster. These processes are called "control plane".
=> Cane be multi-master for high availability.

Components of Control Plane (Master)

1. Kube-Apiserver
2. etcd
3. Kube-scheduler
4. Controller-Manager

1. Kube-Apiserver (Used for communications)
=> This api-server interacts directly with user ( i.e. we apply .yml or json manifest
to kube-apiserver.
=> This kube-apiserver is meant to scale automatically as per load.
=> Kube api-server is front-end of control plane.

2. etcd
=> Stores metadata (data of data) and status of the cluster.
=> etcd is consistent and high-available.
=> store (key-value) , Name = Shikhar or Age = 40

etcd has following features
---------------------------
=> Fully replicated - The entire state is available on every node
in the cluster.
=> Secure - Implements automatic TLS with optional client-certificate
authentication.
=> Fast - Benchmarked at 10,000 writes per second.

3. Kube-scheduler (action)
=> When users make request for the creation & management of PODs,
kube-scheduler is going to take action on these requests.
=> Handles Pod creation and manegment
=> Kube-scheduler match/assign any node to create and run pods.
=> A scheduler watches for newly created Pods that have no node assigned. For every Pod that the scheduler discovers, the scheduler becomes responsible
for finding best node for that pod to run on.
=> Scheduler gets the information for hardware configuration from configuration files and schedules the Pods on nodes accordingly.

Controller-Manager
==================
Actual state = desired state

=> Make sure actual state of cluster matches to desired state.

Two possible choices for controller manager.
1. If K8s on cloud, then it will be cloud-controller manager
2. If K8s on non-cloud, then it will be kube-controller-manager.


Nodes (Kubelet and container engine)

Node is going to run 3 important piece of software/processes.

Kubelet
=======
=> Agent runs on every node
=> Listens to kubernetes master ( eg - pod creation requet)
=> use port 10255
=> Send success/fail reports to master

Container Engine (Docker)

=> Works with kubelet
=> Pulling images
=> Start/stop containers
=> Exposing containers on ports specifed in manifest

Kube-Proxy
==========
=> Assign IP to each Pod
=> It is required to assign IP addresses to PODs (dynamic)
=> Kube-proxy runs on each node & this make sure that each Pod
will get its own unique IP address.

POD
===

=> Smallest unit in kubernetes.
=> POD is a group of one or more containers that are deployed together
on the same host.
=> A cluster is a group of nodes.
=> A Kubernetes cluster has atleast one worker node and one master node.
=> In kubernetes, the control unit is the POD, not the containers.
=> There could be one or more containers in a POD which is tightly coupled.
=> POD runs on node, which which is control by master.
=> Can't start containers without a POD.
=> One POD usually (in ideal condition) contains one container only.





























































 













